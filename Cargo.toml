[workspace]
resolver = "2"
members = [
    "libs/things3-core",
    "libs/things3-common",
    "apps/things3-cli",
    "tools/xtask",
]

[workspace.package]
version = "0.1.0"
edition = "2021"
authors = ["GarthDB <garth@example.com>"]
license = "MIT"
repository = "https://github.com/GarthDB/rust-things"
description = "Rust library and CLI for Things 3 integration with integrated MCP server"

[workspace.dependencies]
# Core
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.0", features = ["v4", "serde"] }
thiserror = "1.0"
anyhow = "1.0"

# Database
rusqlite = { version = "0.31", features = ["bundled"] }

# CLI
clap = { version = "4.0", features = ["derive"] }

# MCP
mcp = "0.1"

# Async
tokio = { version = "1.0", features = ["full"] }

# Caching and Performance
moka = { version = "0.12", features = ["future"] }
dashmap = "5.5"
parking_lot = "0.12"
once_cell = "1.19"

# Export formats
csv = "1.3"
quick-xml = { version = "0.36", features = ["serialize"] }

# Performance monitoring
sysinfo = "0.30"

# Logging and Observability
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json", "chrono"] }
tracing-appender = "0.2"
metrics = "0.22"
metrics-exporter-prometheus = "0.13"
metrics-exporter-tcp = "0.6"
# OpenTelemetry dependencies temporarily disabled due to version conflicts
# opentelemetry = { version = "0.21", features = ["trace"] }
# opentelemetry_sdk = { version = "0.21", features = ["rt-tokio", "trace"] }
# opentelemetry-jaeger = { version = "0.20", features = ["tokio"] }
# opentelemetry-otlp = { version = "0.20", features = ["tokio"] }
# opentelemetry-semantic-conventions = "0.12"

# Health checks
axum = { version = "0.7", features = ["macros", "tracing"] }
tower = "0.4"
tower-http = { version = "0.5", features = ["cors", "trace"] }

# Testing
proptest = "1.0"
tempfile = "3.0"
criterion = "0.5"

# Development
xtask = { path = "tools/xtask" }
cargo-husky = "1.5"

# Coverage
[workspace.metadata.coverage]
# Coverage configuration for the workspace
tool = "cargo-llvm-cov"
config-file = ".llvm-cov.toml"
output-dir = "target/llvm-cov"
lcov-file = "lcov.info"
html-dir = "target/llvm-cov/html"
json-file = "coverage.json"
cobertura-file = "cobertura.xml"
text-file = "coverage.txt"

# Coverage thresholds
[workspace.metadata.coverage.thresholds]
lines = 80
functions = 80
regions = 80
uncovered-lines = 50
uncovered-regions = 50
uncovered-functions = 10
